(()=>{"use strict";const e="st-task",t="st-users",n="to-do",a="in-progress",s="in-review",o="closed",d=["id","title","deadline","description","category"];new RegExp(/^(?=(?:.*[a-zA-Z]){2,})(?=(?:.*\d){2,})[a-zA-Z0-9]+$/);class i{constructor(){this.checkAuth();const e=document.querySelector(".btn-log-out");e instanceof HTMLButtonElement&&e.addEventListener("click",this.handleLogOut)}checkAuth(){const e=localStorage.getItem(t),n=document.createElement("input");if(null==e)return void(location.href="index.html");const a=JSON.parse(e).find((e=>e.isAuth));a&&n instanceof HTMLInputElement?(n.type="hidden",n.id="auth-user",n.value=a.id.toString(),document.body.appendChild(n)):location.href="index.html"}handleLogOut(){const e=document.getElementById("auth-user"),n=localStorage.getItem(t);if(n&&e instanceof HTMLInputElement){const a=JSON.parse(n).filter((t=>(t.id===Number(e.value)&&(t.isAuth=!1),t)));localStorage.setItem(t,JSON.stringify(a)),location.reload()}}}class r{constructor(){const e=document.querySelector(".show-add-modal"),t=document.querySelector(".import-task"),n=document.querySelector(".close-modal-import"),a=document.querySelector(".close-modal-add");e instanceof HTMLButtonElement&&e.addEventListener("click",(()=>this.toggleAddOrEditModal(!0))),a instanceof HTMLButtonElement&&a.addEventListener("click",(()=>this.toggleAddOrEditModal(!1))),t instanceof HTMLButtonElement&&t.addEventListener("click",(()=>this.toggleImportModal(!0))),n instanceof HTMLButtonElement&&n.addEventListener("click",(()=>this.toggleImportModal(!1)))}toggleAddOrEditModal(e){const t=document.getElementById("modal-add-or-edit");t instanceof HTMLDialogElement&&(e?t.showModal():t.close())}closeAddOrEditModal(){const e=document.getElementById("modal-add-or-edit");e instanceof HTMLDialogElement&&e.close()}toggleImportModal(e){const t=document.getElementById("import-modal");t instanceof HTMLDialogElement&&(e?t.showModal():t.close())}}class l{constructor(){this.exportDB=this.exportDB.bind(this),this.importDB=this.importDB.bind(this);const e=document.querySelector(".export-task"),t=document.getElementById("importJson");e&&e.addEventListener("click",this.exportDB),t&&t.addEventListener("submit",this.importDB)}getTasksDB(){return localStorage.getItem(e)}saveTaskDB(t){localStorage.setItem(e,JSON.stringify(t))}saveFormTaskToDb(e){const t=this.getTasksDB();if(t&&t.length>0){const a=JSON.parse(t);a.push({id:e.title.replaceAll(" ","-"),userId:e.userId,title:e.title,deadline:e.deadline,description:e.description,category:n}),this.saveTaskDB(a)}else this.saveTaskDB([{id:e.title.replaceAll(" ","-"),userId:e.userId,title:e.title,deadline:e.deadline,description:e.description,category:n}])}updateTaskToDB(e,t){const n=this.getTasksDB();if(n&&n.length>0){const a=JSON.parse(n).filter((n=>(n.id===e&&(n.id=t.title.replaceAll(" ","-"),n.title=t.title,n.deadline=t.deadline,n.description=t.description),n)));this.saveTaskDB(a)}}deleteTaskToDB(e){const t=this.getTasksDB();if(t&&t.length>0){const n=JSON.parse(t).filter((t=>t.id!==e));this.saveTaskDB(n)}}exportDB(e){e.preventDefault();const t=this.getTasksDB();if(t&&t.length>0){let e=document.createElement("a");e.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(t)),e.setAttribute("download","tasks.json"),e.style.display="none",document.body.appendChild(e),e.click(),document.body.removeChild(e)}}importDB(e){e.preventDefault(),e.stopPropagation();const t=new FileReader;t.onload=this.onReaderLoad.bind(this);const n=document.forms.namedItem("importJson");if(n){const e=new FormData(n).get("file-json");t.readAsText(e)}}onReaderLoad(e){const t=e.target,n=JSON.parse(t.result);n&&n.length>0&&this.validateJSON(n)}validateJSON(e){const t=document.querySelector(".error-import"),n=this.getTasksDB(),a=d.every((t=>e.every((e=>{if("string"==typeof e){const n=JSON.parse(e);return n&&"object"==typeof n&&n.hasOwnProperty(t)}}))));if(n&&t){a||(t.textContent="The JSON file has an error in the Keys  or has an invalid type.");const s=JSON.parse(n),o=s.concat(e.filter((e=>!s.some((t=>t.id===e.id)))));this.saveTaskDB(o),t.textContent="",location.reload()}}}class c{encodeHTML(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/"/g,"&quot;")}togglePassword(){document.querySelectorAll(".btn-toggle-password").forEach((e=>e.addEventListener("click",(e=>{if(e&&e.currentTarget instanceof HTMLButtonElement){const t=e.currentTarget.dataset.type,n=e.currentTarget.dataset.isToggle;if("password"===t){const e=document.getElementById("password");e instanceof HTMLInputElement&&(e.type="0"===n?"text":"password")}if("confirm"===t){const e=document.getElementById("confirm-password");e instanceof HTMLInputElement&&(e.type="0"===n?"text":"password")}e.currentTarget.dataset.isToggle="0"===n?"1":"0"}}))))}}class u extends c{constructor(){super(),this.taskCrud=new l,this.modal=new r,this.handleMoveTask=e=>{e.preventDefault();const t=this.taskCrud.getTasksDB();if(e.currentTarget instanceof HTMLSelectElement&&t&&t.length>0){const n=e.currentTarget.dataset.taskId,a=e.currentTarget.value,s=JSON.parse(t).map((e=>e.id===n?Object.assign(Object.assign({},e),{category:a}):e));this.taskCrud.saveTaskDB(s),location.reload()}},this.handleFormSubmit=this.handleFormSubmit.bind(this),this.handleEditTask=this.handleEditTask.bind(this),this.handleDeleteTask=this.handleDeleteTask.bind(this);const e=document.getElementById("addOrEditTask");e instanceof HTMLFormElement&&e.addEventListener("submit",this.handleFormSubmit),this.getAllTask()}handleFormSubmit(e){e.preventDefault(),e.stopPropagation();const t=document.forms.namedItem("addOrEditTask");if(e.target instanceof EventTarget&&t){const n=e.target.dataset.type,a=e.target.dataset.taskId,s=new FormData(t),o=this.encodeHTML(s.get("title")),d=this.encodeHTML(s.get("deadline")),i=this.encodeHTML(s.get("description"));e.submitter instanceof HTMLButtonElement&&(e.submitter.innerText="Saving...",e.submitter.disabled=!0),this.saveOrUpdateTask(e.submitter,o,d,i,n,a)}}saveOrUpdateTask(e,t,a,s,o,d){const i={id:t.replaceAll(" ","-"),userId:Number(document.getElementById("auth-user").value),deadline:a,title:t,description:s,category:n};"add"===o?this.taskCrud.saveFormTaskToDb(i):this.taskCrud.updateTaskToDB(d,i),setTimeout((()=>{e.innerText="Confirm",e.removeAttribute("disabled"),this.modal.closeAddOrEditModal(),location.reload()}),1500)}getAllTask(){const e=this.taskCrud.getTasksDB();e&&e.length>0&&this.createTaskCards(JSON.parse(e))}taskFilter(e,t){return{todo:()=>e.filter((e=>e.category===n&&e.userId===t)),inProgress:()=>e.filter((e=>e.category===a&&e.userId===t)),inReview:()=>e.filter((e=>e.category===s&&e.userId===t)),closed:()=>e.filter((e=>e.category===o&&e.userId===t))}}createTaskCards(e){let t=new DocumentFragment,d=new DocumentFragment,i=new DocumentFragment,r=new DocumentFragment;const l=this.taskFilter(e,Number(document.getElementById("auth-user").value)),c=l.todo(),u=l.inProgress(),m=l.inReview(),h=l.closed();for(const e of c)t.append(this.crateCard(e));for(const e of u)d.append(this.crateCard(e));for(const e of m)i.append(this.crateCard(e));for(const e of h)r.append(this.crateCard(e));c&&c.length>0&&this.insertCards(n,t),u&&u.length>0&&this.insertCards(a,d),m&&m.length>0&&this.insertCards(s,i),h&&h.length>0&&this.insertCards(o,r),this.moveTaskListener(),this.editTaskListener(),this.deleteTaskListener()}insertCards(e,t){const n=document.querySelector(`.${e}-wrapper`);n instanceof HTMLElement&&n.append(...Array.from(t.children))}crateCard(e){const t=document.createElement("article"),d=document.createElement("header"),i=document.createElement("select"),r=document.createElement("option"),l=document.createElement("option"),c=document.createElement("option"),u=document.createElement("option"),m=document.createElement("option"),h=document.createElement("h5"),p=document.createElement("p"),g=document.createElement("h6"),T=document.createElement("footer"),f=document.createElement("button"),E=document.createElement("button"),k=document.createElement("i"),v=document.createElement("i"),y=document.createElement("i"),D=document.createElement("span"),C=document.createElement("span"),L=document.createElement("span");return h.textContent=e.title,i.className="move",i.name="categories",i.dataset.taskId=e.id,l.value=n,c.value=a,u.value=s,m.value=o,r.textContent="Move To",l.textContent="To Do",c.textContent="In Progress",u.textContent="In Review",m.textContent="Closed",i.options.add(r),i.options.add(l),i.options.add(c),i.options.add(u),i.options.add(m),p.textContent=e.description,k.className="fa-regular fa-calendar",v.className="fa-solid fa-pencil",v.ariaHidden="true",v.title="Edit Task",y.className="fa-solid fa-trash",y.ariaHidden="true",y.title="Delete Task",D.className="fa-sr-only",D.textContent="The Font Awesome Calendar Icon",L.className="sr-only",L.textContent="Delete Task",C.className="sr-only",C.textContent="Edit Task",f.className="btn edit",E.className="btn delete",d.appendChild(h),d.appendChild(i),g.appendChild(k),g.appendChild(D),f.appendChild(v),f.appendChild(C),E.appendChild(y),E.appendChild(L),D.insertAdjacentHTML("afterend",` DeadLine: ${e.deadline}`),f.insertAdjacentText("beforeend","Edit"),E.insertAdjacentText("beforeend","Delete"),f.setAttribute("data-edit",e.id),E.setAttribute("data-delete",e.id),T.appendChild(f),T.appendChild(E),t.appendChild(d),t.appendChild(p),t.appendChild(g),t.appendChild(T),t}moveTaskListener(){document.querySelectorAll(".move").forEach((e=>{e.addEventListener("change",this.handleMoveTask)}))}deleteTaskListener(){document.querySelectorAll(".delete").forEach((e=>{e.addEventListener("click",this.handleDeleteTask)}))}handleDeleteTask(e){e.preventDefault();const t=this.taskCrud.getTasksDB();if(e.currentTarget instanceof HTMLButtonElement&&t&&t.length>0){const n=e.currentTarget.dataset.delete,a=JSON.parse(t).filter((e=>e.id!==n));this.taskCrud.saveTaskDB(a),location.reload()}}editTaskListener(){document.querySelectorAll(".edit").forEach((e=>e.addEventListener("click",this.handleEditTask)))}handleEditTask(e){var t,n,a;e.preventDefault();const s=document.getElementById("modal-add-or-edit"),o=this.taskCrud.getTasksDB();if(o&&o.length>0&&e.currentTarget instanceof HTMLButtonElement&&s instanceof HTMLDialogElement){const d=e.currentTarget.dataset.edit,i=s.querySelector("form"),r=s.querySelector("input#title"),l=s.querySelector("input#deadline"),c=s.querySelector("textarea#description"),u=s.querySelector("legend");if(i&&u&&r&&l&&c){const e=JSON.parse(o).find((e=>e.id===d));i.dataset.type="edit",i.dataset.taskId=d,u.textContent="Edit Task",r.value=null!==(t=null==e?void 0:e.title)&&void 0!==t?t:"",l.value=null!==(n=null==e?void 0:e.deadline)&&void 0!==n?n:"",c.value=null!==(a=null==e?void 0:e.description)&&void 0!==a?a:"",s.showModal()}}}}document.addEventListener("DOMContentLoaded",(()=>{new i,new r,new u}))})();