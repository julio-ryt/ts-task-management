(()=>{"use strict";const e="st-task",t="st-users",o="to-do";new RegExp(/^(?=(?:.*[a-zA-Z]){2,})(?=(?:.*\d){2,})[a-zA-Z0-9]+$/);class n{constructor(){this.checkAuth();const e=document.querySelector(".btn-log-out");e instanceof HTMLButtonElement&&e.addEventListener("click",this.handleLogOut)}checkAuth(){const e=localStorage.getItem(t),o=document.createElement("input");if(null==e)return void(location.href="index.html");const n=JSON.parse(e).find((e=>e.isAuth));n&&o instanceof HTMLInputElement?(o.type="hidden",o.id="auth-user",o.value=n.id.toString(),document.body.appendChild(o)):location.href="index.html"}handleLogOut(){const e=document.getElementById("auth-user"),o=localStorage.getItem(t);if(o&&e instanceof HTMLInputElement){const n=JSON.parse(o).filter((t=>(t.id===Number(e.value)&&(t.isAuth=!1),t)));localStorage.setItem(t,JSON.stringify(n)),location.reload()}}}class s{constructor(){const e=document.querySelector(".show-add-modal"),t=document.querySelector(".import-task"),o=document.querySelector(".close-modal-import"),n=document.querySelector(".close-modal-add");e instanceof HTMLButtonElement&&e.addEventListener("click",(()=>this.toggleAddOrEditModal(!0))),n instanceof HTMLButtonElement&&n.addEventListener("click",(()=>this.toggleAddOrEditModal(!1))),t instanceof HTMLButtonElement&&t.addEventListener("click",(()=>this.toggleImportModal(!0))),o instanceof HTMLButtonElement&&o.addEventListener("click",(()=>this.toggleImportModal(!1)))}toggleAddOrEditModal(e){const t=document.getElementById("modal-add-or-edit");t instanceof HTMLDialogElement&&(e?t.showModal():t.close())}closeAddOrEditModal(){const e=document.getElementById("modal-add-or-edit");e instanceof HTMLDialogElement&&e.close()}toggleImportModal(e){const t=document.getElementById("import-modal");t instanceof HTMLDialogElement&&(e?t.showModal():t.close())}}class a{constructor(){}getTasksDB(){return localStorage.getItem(e)}saveTaskDB(t){localStorage.setItem(e,JSON.stringify(t))}saveFormTaskToDb(e){const t=this.getTasksDB();if(t&&t.length>0){const n=JSON.parse(t);n.push({id:e.title.replaceAll(" ","-"),userId:e.userId,title:e.title,deadline:e.deadline,description:e.description,category:o}),this.saveTaskDB(n)}else this.saveTaskDB([{id:e.title.replaceAll(" ","-"),userId:e.userId,title:e.title,deadline:e.deadline,description:e.description,category:o}])}updateTaskToDB(e,t){const o=this.getTasksDB();if(o&&o.length>0){const n=JSON.parse(o).filter((o=>(o.id===e&&(o.id=t.title.replaceAll(" ","-"),o.title=t.title,o.deadline=t.deadline,o.description=t.description),o)));this.saveTaskDB(n)}}deleteTaskToDB(e){const t=this.getTasksDB();if(t&&t.length>0){const o=JSON.parse(t).filter((t=>t.id!==e));this.saveTaskDB(o)}}}class d{encodeHTML(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/"/g,"&quot;")}togglePassword(){document.querySelectorAll(".btn-toggle-password").forEach((e=>e.addEventListener("click",(e=>{if(e&&e.currentTarget instanceof HTMLButtonElement){const t=e.currentTarget.dataset.type,o=e.currentTarget.dataset.isToggle;if("password"===t){const e=document.getElementById("password");e instanceof HTMLInputElement&&(e.type="0"===o?"text":"password")}if("confirm"===t){const e=document.getElementById("confirm-password");e instanceof HTMLInputElement&&(e.type="0"===o?"text":"password")}e.currentTarget.dataset.isToggle="0"===o?"1":"0"}}))))}}class i extends d{constructor(){super(),this.taskCrud=new a,this.modal=new s;const e=document.getElementById("addOrEditTask");this.handleFormSubmit=this.handleFormSubmit.bind(this),e instanceof HTMLFormElement&&e.addEventListener("submit",this.handleFormSubmit)}handleFormSubmit(e){e.preventDefault(),e.stopPropagation();const t=document.forms.namedItem("addOrEditTask");if(e.target instanceof HTMLFormElement&&t){const o=e.target.dataset.type,n=e.target.dataset.taskId,s=new FormData(t),a=this.encodeHTML(s.get("title")),d=this.encodeHTML(s.get("deadline")),i=this.encodeHTML(s.get("description"));e.target instanceof HTMLButtonElement&&(e.target.innerText="Saving...",e.target.disabled=!0),this.saveOrUpdateTask(e.target,a,d,i,o,n)}}saveOrUpdateTask(e,t,n,s,a,d){const i={id:t.replaceAll(" ","-"),userId:Number(document.getElementById("auth-user").value),deadline:n,title:t,description:s,category:o};"add"===a?this.taskCrud.saveFormTaskToDb(i):this.taskCrud.updateTaskToDB(d,i),setTimeout((()=>{e.innerText="Confirm",e.removeAttribute("disabled"),this.modal.closeAddOrEditModal(),location.reload()}),1500)}}document.addEventListener("DOMContentLoaded",(()=>{new n,new s,new i}))})();